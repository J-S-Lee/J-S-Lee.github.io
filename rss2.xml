<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JSLee&#39;s Blog</title>
    <link>https://j-s-lee.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Tue, 21 Aug 2018 03:23:32 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Hyperledger Developer Tutorial</title>
      <link>https://j-s-lee.github.io/2018/08/21/hyperledger-developer-tutorial/</link>
      <guid>https://j-s-lee.github.io/2018/08/21/hyperledger-developer-tutorial/</guid>
      <pubDate>Tue, 21 Aug 2018 02:13:17 GMT</pubDate>
      <description>
      
        &lt;p&gt;Hyperledger Composer 개발 환경 셋업이 끝난 후 간단한 튜토리얼을 진행해 보았다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;튜토리얼 가이드 :  &lt;a href=&quot;https://hyperledger.github.io/composer/latest/tutorials/developer-tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Developer tutorial for creating a Hyperledger Composer solution&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;!--toc--&gt;
&lt;h2 id=&quot;0-Prerequisites&quot;&gt;&lt;a href=&quot;#0-Prerequisites&quot; class=&quot;headerlink&quot; title=&quot;0. Prerequisites&quot;&gt;&lt;/a&gt;0. Prerequisites&lt;/h2&gt;&lt;p&gt;이 튜토리얼은 &lt;a href=&quot;https://hyperledger.github.io/composer/latest/installing/development-tools.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;개발 환경 설치&lt;/a&gt;가 완료된 후 진행하였으며, 에디터는 VSCode를 사용했다.  &lt;/p&gt;
&lt;h2 id=&quot;1-Skeleton-Business-Network-생성&quot;&gt;&lt;a href=&quot;#1-Skeleton-Business-Network-생성&quot; class=&quot;headerlink&quot; title=&quot;1. Skeleton Business Network 생성&quot;&gt;&lt;/a&gt;1. Skeleton Business Network 생성&lt;/h2&gt;&lt;p&gt;앞서 설치한 Yeoman generator를 이용해 스켈레톤 비즈니스 네트워크를 생성한다. Yeoman을 이용하면 비즈니스 네트워크에 필요한 컴포넌트들을 포함한 디렉토리를 생성해준다.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ yo hyperledger-composer:businessnetwork&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Hyperledger Composer 개발 환경 셋업이 끝난 후 간단한 튜토리얼을 진행해 보았다.</p><ul><li>튜토리얼 가이드 :  <a href="https://hyperledger.github.io/composer/latest/tutorials/developer-tutorial.html" target="_blank" rel="noopener">Developer tutorial for creating a Hyperledger Composer solution</a> </li></ul><!--toc--><h2 id="0-Prerequisites"><a href="#0-Prerequisites" class="headerlink" title="0. Prerequisites"></a>0. Prerequisites</h2><p>이 튜토리얼은 <a href="https://hyperledger.github.io/composer/latest/installing/development-tools.html" target="_blank" rel="noopener">개발 환경 설치</a>가 완료된 후 진행하였으며, 에디터는 VSCode를 사용했다.  </p><h2 id="1-Skeleton-Business-Network-생성"><a href="#1-Skeleton-Business-Network-생성" class="headerlink" title="1. Skeleton Business Network 생성"></a>1. Skeleton Business Network 생성</h2><p>앞서 설치한 Yeoman generator를 이용해 스켈레톤 비즈니스 네트워크를 생성한다. Yeoman을 이용하면 비즈니스 네트워크에 필요한 컴포넌트들을 포함한 디렉토리를 생성해준다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yo hyperledger-composer:businessnetwork</span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="/assets/images/capture/2018-08-20_4.13.17.png" alt="2018-08-20_4.13.17">  </p><h2 id="2-비즈니스-네트워크-정의"><a href="#2-비즈니스-네트워크-정의" class="headerlink" title="2. 비즈니스 네트워크 정의"></a>2. 비즈니스 네트워크 정의</h2><p>위에서 생성한 스켈레톤 비즈니스 네트워크는 다음의 파일들로 구성된다.</p><ul><li>모델(<code>.cto</code>) - 자산(assets), 참가자(participants), 트랜잭션(transactions)에 대한 클래스 정의</li><li>스크립트(<code>logic.js</code>) - 트랜잭션 프로세서 function</li><li>엑세스컨트롤(<code>permissions.acl</code>) - 권한 제어 규칙</li><li>JSON(<code>package.json</code>) - 비즈니스 네트워크 메타데이터  </li></ul><h3 id="2-1-모델-파일-수정"><a href="#2-1-모델-파일-수정" class="headerlink" title="2-1. 모델 파일 수정"></a>2-1. 모델 파일 수정</h3><p>assets, participants, transactions의 클래스 정의를 위해 모델 파일을 아래와 같이 수정한다.</p><figure class="highlight javascript"><figcaption><span>org.example.mynetwork.cto</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * My commodity trading network</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">namespace org.example.mynetwork</span><br><span class="line">asset Commodity identified by tradingSymbol &#123;</span><br><span class="line">    o <span class="built_in">String</span> tradingSymbol</span><br><span class="line">    o <span class="built_in">String</span> description</span><br><span class="line">    o <span class="built_in">String</span> mainExchange</span><br><span class="line">    o Double quantity</span><br><span class="line">    --&gt; Trader owner</span><br><span class="line">&#125;</span><br><span class="line">participant Trader identified by tradeId &#123;</span><br><span class="line">    o <span class="built_in">String</span> tradeId</span><br><span class="line">    o <span class="built_in">String</span> firstName</span><br><span class="line">    o <span class="built_in">String</span> lastName</span><br><span class="line">&#125;</span><br><span class="line">transaction Trade &#123;</span><br><span class="line">    --&gt; Commodity commodity</span><br><span class="line">    --&gt; Trader newOwner</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-트랜잭션-로직-스크립트-수정"><a href="#2-2-트랜잭션-로직-스크립트-수정" class="headerlink" title="2-2. 트랜잭션 로직 스크립트 수정"></a>2-2. 트랜잭션 로직 스크립트 수정</h3><p><code>2-1</code>에서 정의한 <code>Trade</code> 트랜잭션이 실행할 자바스크립트 로직을 로직 스크립트에 추가한다.</p><figure class="highlight javascript"><figcaption><span>logic.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * Track the trade of a commodity from one trader to another</span></span><br><span class="line"><span class="comment"> * @param &#123;org.example.mynetwork.Trade&#125; trade - the trade to be processed</span></span><br><span class="line"><span class="comment"> * @transaction</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">tradeCommodity</span>(<span class="params">trade</span>) </span>&#123;</span><br><span class="line">    trade.commodity.owner = trade.newOwner;</span><br><span class="line">    <span class="keyword">let</span> assetRegistry = <span class="keyword">await</span> getAssetRegistry(<span class="string">'org.example.mynetwork.Commodity'</span>);</span><br><span class="line">    <span class="keyword">await</span> assetRegistry.update(trade.commodity);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="2-3-access-control-규칙-수정"><a href="#2-3-access-control-규칙-수정" class="headerlink" title="2-3. access control 규칙 수정"></a>2-3. access control 규칙 수정</h3><figure class="highlight javascript"><figcaption><span>permissions.acl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * Access control rules for tutorial-network</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">rule Default &#123;</span><br><span class="line">    description: <span class="string">"Allow all participants access to all resources"</span></span><br><span class="line">    participant: <span class="string">"ANY"</span></span><br><span class="line">    operation: ALL</span><br><span class="line">    resource: <span class="string">"org.example.mynetwork.*"</span></span><br><span class="line">    action: ALLOW</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rule SystemACL &#123;</span><br><span class="line">  description:  <span class="string">"System ACL to permit all access"</span></span><br><span class="line">  participant: <span class="string">"ANY"</span></span><br><span class="line">  operation: ALL</span><br><span class="line">  resource: <span class="string">"org.hyperledger.composer.system.**"</span></span><br><span class="line">  action: ALLOW</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-아카이브-생성"><a href="#3-아카이브-생성" class="headerlink" title="3. 아카이브 생성"></a>3. 아카이브 생성</h2><p>정의된 비즈니스 네트워크를 배포하기 위해서는 비즈니스 네트워크 아카이브(<code>.bna</code>)파일로 패키지화 되어야 한다.</p><p><code>tutorial-network</code> 디렉토리로 이동한 후 아래 명령어를 수행한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer archive create -t dir -n .</span><br></pre></td></tr></table></figure><p>커맨드가 실행되면 디렉토리 내에  <a href="mailto:`tutorial-network@0.0.1.bna" target="_blank" rel="noopener">`tutorial-network@0.0.1.bna</a>` 와 같이 아카이브 파일이 생성된다.  </p><h2 id="4-비즈니스-네트워크-배포"><a href="#4-비즈니스-네트워크-배포" class="headerlink" title="4. 비즈니스 네트워크 배포"></a>4. 비즈니스 네트워크 배포</h2><p>생성된 <code>.bna</code> 파일은 <code>composer network install</code>명령을 통해 Hyperledger Fabric 인스턴스에 배포할 수 있다.</p><p>이 명령을 사용하려면 <code>PeerAdmin</code> 비즈니스 네트워크 카드가 필요하지만 개발 환경 설치 과정에서 이미 생성된 것이 있다.</p><ol><li><p>비즈니스 네트워크 설치를 위해 <code>tutorial-network</code>로 이동해서 아래 명령을 실행한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer network install --card PeerAdmin@hlfv1 --archiveFile tutorial-network@0.0.1.bna</span><br></pre></td></tr></table></figure><p><code>composer network install</code> 명령을 사용하려면 PeerAdmin  비즈니스 네트워크 카드, 비즈니스 네트워크가 정의된 <code>.bna</code>파일의 경로가 필요하다.  </p></li></ol><ol start="2"><li><p>설치한 컴포저 네트워크는 <code>composer network start</code> 명령을 통해 실행할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer network start --networkName tutorial-network --networkVersion 0.0.1 --networkAdmin admin --networkAdminEnrollSecret adminpw --card PeerAdmin@hlfv1 --file networkadmin.card</span><br></pre></td></tr></table></figure></li><li><p>사용 가능한 비즈니스 네트워크 카드로 네트워크 관리자 ID를 가져오려면 <code>composer network start</code> 명령에서 지정한 파일명을 이용해 다음 명령을 실행하면 된다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer card import --file networkadmin.card</span><br></pre></td></tr></table></figure></li><li><p>아래 명령을 입력하면 비즈니스 네트워크가 성공적으로 배포되었는지 확인할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer network ping --card admin@my-network</span><br></pre></td></tr></table></figure></li></ol><h2 id="5-REST-서버-생성"><a href="#5-REST-서버-생성" class="headerlink" title="5. REST 서버 생성"></a>5. REST 서버 생성</h2><p>Hyperledger Composer는 배포된 비즈니스 네트워크 기반의 REST API 서버를 생성 할 수 있다.</p><p><code>tutorial-network</code> 디렉토리로 이동 후 <code>composer-rest-server</code> 명령을 입력한 후 REST API 생성 방법을 설정한다.</p><p><img src="/assets/images/capture/2018-08-20_8.12.01.png" alt="2018-08-20_8.12.01"></p><p>composer-rest-server가 성공적으로 시작되었다면 <a href="http://localhost:3000/explorer" target="_blank" rel="noopener">http://localhost:3000/explorer</a> 로 이동하면 아래와 같은 웹브라우저 화면을 볼 수 있다.</p><p><img src="/assets/images/capture/2018-08-21_9.39.52.png" alt="2018-08-20_8.14.22"></p><h2 id="6-어플리케이션-생성"><a href="#6-어플리케이션-생성" class="headerlink" title="6. 어플리케이션 생성"></a>6. 어플리케이션 생성</h2><p>Hyperledger Composer는 REST API를 이용하는 Angular 어플리케이션 생성도 가능하다.</p><p><code>tutorial-network</code> 디렉토리에서 <code>yo hyperledger-composer:angular</code> 명령어를 실행하면 된다.</p><p><img src="/assets/images/capture/2018-08-20_8.22.14.png" alt="2018-08-20_8.22.14">  </p><p>어플리케이션 생성이 성공적으로 완료되면 아래와 같은 메시지를 볼 수 있다.</p><p><img src="/assets/images/capture/2018-08-21_9.36.25.png" alt="2018-08-21_9.36.25">  </p><p><code>npm install</code> 후 <code>npm start</code>를 실행하면 어플리케이션이 실행된다.</p><p><code>npm start</code> 명령은 해당 어플리케이션의 <strong>package.json</strong>의 scripts에 있는 start 명령어를 실행한다.  </p><p><img src="/assets/images/capture/2018-08-21_10.30.52.png" alt="2018-08-21_10.30.52">  </p><p><img src="/assets/images/capture/2018-08-21_9.36.58.png" alt="2018-08-21_9.36.58">  </p><p>웹브라우저를 통해 <a href="http://localhost:4200" target="_blank" rel="noopener">http://localhost:4200</a> 로 이동하면 어플리케이션이 생성 된 것을 볼 수 있다.</p><p><img src="/assets/images/capture/2018-08-21_9.46.23.png" alt="2018-08-21_9.46.23">  </p>]]></content:encoded>
      
      <comments>https://j-s-lee.github.io/2018/08/21/hyperledger-developer-tutorial/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Docker &amp; Docker Compose 버전 업그레이드</title>
      <link>https://j-s-lee.github.io/2018/08/17/hyperledger-error-log2/</link>
      <guid>https://j-s-lee.github.io/2018/08/17/hyperledger-error-log2/</guid>
      <pubDate>Fri, 17 Aug 2018 07:21:04 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;a href=&quot;https://hyperledger.github.io/composer/latest/installing/development-tools.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hyperledger Composer Installing 가이드&lt;/a&gt;의 절차에 따라 Hyperledger Fabric을 설치한 후 &lt;code&gt;./startFabric.sh&lt;/code&gt; 스크립트를 실행하면 &lt;code&gt;No such command: down&lt;/code&gt; 오류가 발생하는 경우가 있다.&lt;/p&gt;
&lt;p&gt; &lt;code&gt;docker&lt;/code&gt;와 &lt;code&gt;docker-compose&lt;/code&gt; 의 버전 문제였는데.. &lt;a href=&quot;https://j-s-lee.github.io/2018/08/11/getting-started-hyperledger-with-windows10-wsl/&quot;&gt;Hyperledger Composer &amp;amp; Fabric 설치에 필요한 사전 요구사항&lt;/a&gt;에 표기된 버전을 참고하여 설치되어 있는 버전이 낮을 경우 업그레이드 해줘야 한다.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p><a href="https://hyperledger.github.io/composer/latest/installing/development-tools.html" target="_blank" rel="noopener">Hyperledger Composer Installing 가이드</a>의 절차에 따라 Hyperledger Fabric을 설치한 후 <code>./startFabric.sh</code> 스크립트를 실행하면 <code>No such command: down</code> 오류가 발생하는 경우가 있다.</p><p> <code>docker</code>와 <code>docker-compose</code> 의 버전 문제였는데.. <a href="https://j-s-lee.github.io/2018/08/11/getting-started-hyperledger-with-windows10-wsl/">Hyperledger Composer &amp; Fabric 설치에 필요한 사전 요구사항</a>에 표기된 버전을 참고하여 설치되어 있는 버전이 낮을 경우 업그레이드 해줘야 한다.</p><a id="more"></a><p>검색해 보니  <code>docker-compose</code>의 경우 설치된 <code>docker</code> 버전에 따라 설치 가능한 latest 버전에 제한이 있는 것 같다.</p><p><code>$ docker -v</code> , <code>$ docker-compose -v</code> 명령을 통해 각각의 버전을 확인 후 최신 버전으로 업그레이드가 필요한 경우 다음의 커맨드를 이용하여 업그레이드가 가능하다.</p><ul><li>docker upgrade</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get upgrade</span><br></pre></td></tr></table></figure><ul><li>docker-compose upgrade</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get -y install python-pip</span><br><span class="line">$ sudo pip install --upgrade pip setuptools docker-compose</span><br></pre></td></tr></table></figure><p>업그레이드 이후 다시 <code>./startFabric.sh</code> 스크립트를 실행 시키고  <code>docker ps</code> 를 통해 컨테이너 상태를 확인 할 수 있었다.  </p>]]></content:encoded>
      
      <comments>https://j-s-lee.github.io/2018/08/17/hyperledger-error-log2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>NPM global install error with Yeoman</title>
      <link>https://j-s-lee.github.io/2018/08/17/hyperledger-devtools-installing-error-log/</link>
      <guid>https://j-s-lee.github.io/2018/08/17/hyperledger-devtools-installing-error-log/</guid>
      <pubDate>Fri, 17 Aug 2018 02:16:57 GMT</pubDate>
      <description>
      
        &lt;p&gt;Hyperledger composer 개발 환경 설정 중 발생한 에러들 정리&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Hyperledger composer 개발 환경 설정 중 발생한 에러들 정리</p><a id="more"></a><h2 id="Yeoman-설치"><a href="#Yeoman-설치" class="headerlink" title="Yeoman 설치"></a>Yeoman 설치</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g yo</span><br></pre></td></tr></table></figure><h3 id="1-global-installation을-위한-NPM-default-directory-생성"><a href="#1-global-installation을-위한-NPM-default-directory-생성" class="headerlink" title="1. global installation을 위한 NPM default directory 생성"></a>1. global installation을 위한 NPM default directory 생성</h3><p>우선 Permission 문제에 대한 문서 <a href="https://docs.npmjs.com/getting-started/fixing-npm-permissions" target="_blank" rel="noopener">NPM docs - getting-started - fixing-npm-permissions</a> 를 참고하여 npm의 <code>Default Directory</code>를 수정한다.</p><ol><li>global installation을 위한 디렉토리 생성</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir ~/.npm-global</span><br></pre></td></tr></table></figure><ol start="2"><li>디렉토리 경로를 <code>npm config</code>에  세팅</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm config <span class="built_in">set</span> prefix <span class="string">'~/.npm-global'</span></span><br><span class="line">$ npm config get prefix <span class="comment"># config prefix 세팅이 잘 되었는지 확인</span></span><br></pre></td></tr></table></figure><ol start="3"><li>환경변수 설정</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi ~/.profile <span class="comment"># .profile 수정(사용하는 에디터에 따라 명령어가 다를 수 있다)</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> PATH=~/.npm-global/bin:<span class="variable">$PATH</span> <span class="comment"># 위에서 생성한 npm global install을 위한 dir경로</span></span><br></pre></td></tr></table></figure><p><code>.profile</code> 수정 후에는 변경사항을 적용시켜야 한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.profile</span><br></pre></td></tr></table></figure><h3 id="2-디렉토리-권한-수정"><a href="#2-디렉토리-권한-수정" class="headerlink" title="2. 디렉토리 권한 수정"></a>2. 디렉토리 권한 수정</h3><p>1번의 과정을 거친 후에도 다시 <code>npm install -g yo</code> 실행 시 아래와 같은 오류 발생</p><p>오류 내용이 길어서 전체 내용 확인이 필요한 경우 에러 내용에 명시된 로그파일 <code>/home/hyper/.npm/_logs/2018-08-17T02_14_30_188Z-debug.log</code>을 통해 확인할 수 있다.</p><ol><li>에러 로그</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">npm WARN checkPermissions Missing write access to /home/hyper/.npm-global/lib/node_modules/yo</span><br><span class="line">npm WARN checkPermissions Missing write access to /home/hyper/.npm-global/lib/node_modules/yo/node_modules</span><br><span class="line">npm ERR! path /home/hyper/.npm-global/lib/node_modules/yo</span><br><span class="line">npm ERR! code EACCES</span><br><span class="line">npm ERR! errno -13</span><br><span class="line">npm ERR! syscall access</span><br><span class="line">npm ERR! Error: EACCES: permission denied, access <span class="string">'/home/hyper/.npm-global/lib/node_modules/yo'</span></span><br><span class="line">npm ERR!  &#123; Error: EACCES: permission denied, access <span class="string">'/home/hyper/.npm-global/lib/node_modules/yo'</span></span><br><span class="line">npm ERR!   stack: <span class="string">'Error: EACCES: permission denied, access \'</span>/home/hyper/.npm-global/lib/node_modules/yo\<span class="string">''</span>,</span><br><span class="line">npm ERR!   errno: -13,</span><br><span class="line">npm ERR!   code: <span class="string">'EACCES'</span>,</span><br><span class="line">npm ERR!   syscall: <span class="string">'access'</span>,</span><br><span class="line">npm ERR!   path: <span class="string">'/home/hyper/.npm-global/lib/node_modules/yo'</span> &#125;</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! The operation was rejected by your operating system.</span><br><span class="line">npm ERR! It is likely you <span class="keyword">do</span> not have the permissions to access this file as the current user</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! If you believe this might be a permissions issue, please double-check the</span><br><span class="line">npm ERR! permissions of the file and its containing directories, or try running</span><br><span class="line">npm ERR! the <span class="built_in">command</span> again as root/Administrator (though this is not recommended).</span><br><span class="line"></span><br><span class="line">npm ERR! A complete <span class="built_in">log</span> of this run can be found <span class="keyword">in</span>:</span><br><span class="line">npm ERR!     /home/hyper/.npm/_logs/2018-08-17T02_14_30_188Z-debug.log</span><br></pre></td></tr></table></figure><ol start="2"><li>에러 로그에 명시된 access 오류가 발생하는 디렉토리 권한 수정</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chown -R hyper /home/hyper/.npm-global</span><br><span class="line">$ npm cache clean -f</span><br><span class="line">npm WARN using --force I sure hope you know what you are doing.</span><br></pre></td></tr></table></figure><ol start="3"><li>Yeoman 설치</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g yo</span><br><span class="line">/home/hyper/.npm-global/bin/yo -&gt; /home/hyper/.npm-global/lib/node_modules/yo/lib/cli.js</span><br><span class="line">/home/hyper/.npm-global/bin/yo-complete -&gt; /home/hyper/.npm-global/lib/node_modules/yo/lib/completion/index.js</span><br><span class="line"></span><br><span class="line">&gt; yo@2.0.5 postinstall /home/hyper/.npm-global/lib/node_modules/yo</span><br><span class="line">&gt; yodoctor</span><br><span class="line"></span><br><span class="line">Yeoman Doctor</span><br><span class="line">Running sanity checks on your system</span><br><span class="line"></span><br><span class="line">✔ Global configuration file is valid</span><br><span class="line">✔ NODE_PATH matches the npm root</span><br><span class="line">✔ Node.js version</span><br><span class="line">✔ No .bowerrc file <span class="keyword">in</span> home directory</span><br><span class="line">✔ No .yo-rc.json file <span class="keyword">in</span> home directory</span><br><span class="line">✔ npm version</span><br><span class="line">✔ yo version</span><br><span class="line"></span><br><span class="line">Everything looks all right!</span><br><span class="line">+ yo@2.0.5</span><br><span class="line">removed 1 package and updated 6 packages <span class="keyword">in</span> 27.231s</span><br><span class="line">hyper@DESKTOP-BOKQP6N:~$</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://j-s-lee.github.io/2018/08/17/hyperledger-devtools-installing-error-log/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hyperledger 개발 환경 구축하기</title>
      <link>https://j-s-lee.github.io/2018/08/11/getting-started-hyperledger-with-windows10-wsl/</link>
      <guid>https://j-s-lee.github.io/2018/08/11/getting-started-hyperledger-with-windows10-wsl/</guid>
      <pubDate>Sat, 11 Aug 2018 06:48:28 GMT</pubDate>
      <description>
      
        &lt;p&gt;윈도우 환경에서 &lt;code&gt;Hyperledger Composer&lt;/code&gt; 개발 환경 구축하는 과정을 정리하는 글&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>윈도우 환경에서 <code>Hyperledger Composer</code> 개발 환경 구축하는 과정을 정리하는 글</p><a id="more"></a><h3 id="Hyperledger-Composer-amp-Fabric-설치에-필요한-개발-툴"><a href="#Hyperledger-Composer-amp-Fabric-설치에-필요한-개발-툴" class="headerlink" title="Hyperledger Composer &amp; Fabric 설치에 필요한 개발 툴"></a>Hyperledger Composer &amp; Fabric 설치에 필요한 개발 툴</h3><ul><li>OS : Ubuntu Linux 14.04 / 16.04 LTS (both 64-bit), or Mac OS 10.12</li><li>Docker Engine : Version 17.03 or higher</li><li>Docker-Compose : Version 1.8 or higher</li><li>Node : 8.9 or higher (version 9 is not supported)</li><li>npm : v5.x</li><li>git : 2.9.x or higher</li><li>Python : 2.7.x</li><li>Editor : A code editor of user choice, recommend VSCode</li></ul><h3 id="1-개발-환경-설치"><a href="#1-개발-환경-설치" class="headerlink" title="1. 개발 환경 설치"></a>1. 개발 환경 설치</h3><h4 id="Windows-10-pro-설정"><a href="#Windows-10-pro-설정" class="headerlink" title="Windows 10 pro 설정"></a>Windows 10 pro 설정</h4><p><code>제어판</code> &gt; <code>프로그램</code> &gt; <code>프로그램 및 기능</code> &gt; <code>Windows 기능 켜기/끄기</code> &gt; <code>Hyper-V</code> 체크</p><ul><li style="list-style: none"><input type="checkbox" checked> Hyper-V</li></ul><ul><li><p>Windows GIT client &amp; shell <a href="https://gitforwindows.org" target="_blank" rel="noopener">설치</a></p></li><li><p>Node.js <a href="https://nodejs.org/ko/download/" target="_blank" rel="noopener">설치</a></p></li></ul><h4 id="prerequisites-다운로드"><a href="#prerequisites-다운로드" class="headerlink" title="prerequisites 다운로드"></a>prerequisites 다운로드</h4><p>위에 명시된 <code>hyperledger composer</code> 설치를 위해 필요한 시스템 패키지를 다운로드한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://hyperledger.github.io/composer/latest/prereqs-ubuntu.sh</span><br><span class="line">chmod u+x prereqs-ubuntu.sh</span><br><span class="line">./prereqs-ubuntu.sh</span><br></pre></td></tr></table></figure><p>패키지별 버전 확인을 통해 잘 설치되었는지 체크한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">nodejs -v <span class="comment"># node version check</span></span><br><span class="line"></span><br><span class="line">npm -v <span class="comment"># npm version check</span></span><br><span class="line"></span><br><span class="line">git --version <span class="comment"># git version check</span></span><br><span class="line"></span><br><span class="line">python --version <span class="comment"># python version check</span></span><br><span class="line"></span><br><span class="line">docker -v <span class="comment"># docker version check</span></span><br><span class="line"></span><br><span class="line">docker-compose -v <span class="comment"># docker-compose version check</span></span><br></pre></td></tr></table></figure><h3 id="3-컴포넌트-설치"><a href="#3-컴포넌트-설치" class="headerlink" title="3. 컴포넌트 설치"></a>3. 컴포넌트 설치</h3><p><code>composer-cli</code>는 필수 CLI 툴이고, 나머지는 개발 환경 구성에 꼭 필요한 부분은 아니다.</p><p>하지만 <a href="https://hyperledger.github.io/composer/latest/installing/development-tools.html" target="_blank" rel="noopener">공식 사이트</a>에서는 튜토리얼을 진행하거나 어플리케이션 개발을 할 때 유용하므로 함께 설치할 것을 권장하고 있다.</p><h4 id="CLI-툴-설치"><a href="#CLI-툴-설치" class="headerlink" title="CLI 툴 설치"></a>CLI 툴 설치</h4><ol><li><p>코어 CLI 툴</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g composer-cli@0.20</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>RESTful API Server를 띄워주는 기능</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g composer-rest-server@0.20</span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>어플리케이션 assets 생성에 유용</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g generator-hyperledger-composer@0.20</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p><code>generator-hyperledger-composer</code> 같은 기능을 이용한 어플리케이션 생성을 위한 툴 Yeoman</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yo</span><br></pre></td></tr></table></figure></li></ol><h4 id="Playground-설치"><a href="#Playground-설치" class="headerlink" title="Playground 설치"></a>Playground 설치</h4><ol><li><p>Playground - 간단한 수정, 테스팅을 브라우저 UI 환경에서 제공</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g omposer-playground@0.20</span><br></pre></td></tr></table></figure></li></ol><h4 id="Hyperledger-Fabric-설치"><a href="#Hyperledger-Fabric-설치" class="headerlink" title="Hyperledger Fabric 설치"></a>Hyperledger Fabric 설치</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/fabric-dev-servers &amp;&amp; <span class="built_in">cd</span> ~/fabric-dev-servers</span><br><span class="line"></span><br><span class="line">curl -O https://raw.githubusercontent.com/hyperledger/composer-tools/master/packages/fabric-dev-servers/fabric-dev-servers.tar.gz</span><br><span class="line">tar -xvf fabric-dev-servers.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/fabric-dev-servers</span><br><span class="line"><span class="built_in">export</span> FABRIC_VERSION=hlfv12</span><br><span class="line">./downloadFabric.sh</span><br></pre></td></tr></table></figure><h4 id="Hyperledger-Fabric-시작-종료"><a href="#Hyperledger-Fabric-시작-종료" class="headerlink" title="Hyperledger Fabric 시작/종료"></a>Hyperledger Fabric 시작/종료</h4><p>런타임을 처음 시작하는 경우 start 스크립트 실행 후 PeerAdmin card를 생성해야 한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/fabric-dev-servers</span><br><span class="line"><span class="built_in">export</span> FABRIC_VERSION=hlfv12</span><br><span class="line">./startFabric.sh</span><br><span class="line">./createPeerAdminCard.sh</span><br></pre></td></tr></table></figure><p>이후 런타임을 시작하거나 정지시킬 때는 <code>~/fabric-dev-servers/stopFabric.sh</code>, <code>~/fabric-dev-servers/startFabric.sh</code>을 이용하면 된다.</p><p>개발 세션을 종료할 경우엔 <code>~/fabric-dev-servers/stopFabric.sh</code> 실행 후에 <code>~/fabric-dev-servers/teardownFabric.sh</code>를 사용하면 된다. 만약 teardown 스크립트를 실행한다면, 다음에 런타임을 시작할 때 처음 런타임 시작과 같이 새로운 PeerAdmin card를 생성해줘야한다.</p><h4 id="Playground-실행"><a href="#Playground-실행" class="headerlink" title="Playground 실행"></a>Playground 실행</h4><p>playground web app을 실행하는 방법</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer-playground</span><br></pre></td></tr></table></figure><p>브라우저가 다음의 주소를 갖고 자동으로 열린다. <a href="http://localhost:8080/login" target="_blank" rel="noopener">http://localhost:8080/login</a></p><p>“My Business Networks” 화면에서  <code>createPeerAdminCard</code> 스크립트를 통해 생성한 <code>PeerAdmin@hlfv1</code> 카드가 보이지 않는다면 런타임이 정상적으로 시작되지 않은 것이다.</p><h3 id="참고자료"><a href="#참고자료" class="headerlink" title="참고자료"></a>참고자료</h3><ul><li><a href="https://d2fault.github.io/2018/04/30/20180430-setting-hyperledger-developement-environment/" target="_blank" rel="noopener">[Hyperledger] 개발 환경 구축하기(설치) | 잡동사니 수집광</a></li><li><a href="https://hyperledger.github.io/composer/latest/installing/installing-prereqs.html" target="_blank" rel="noopener">Installing pre-requisites | Hyperledger </a></li><li><a href="https://hyperledger.github.io/composer/latest/installing/development-tools.html" target="_blank" rel="noopener">Installing development-tools | Hyperledger</a></li></ul>]]></content:encoded>
      
      <comments>https://j-s-lee.github.io/2018/08/11/getting-started-hyperledger-with-windows10-wsl/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
